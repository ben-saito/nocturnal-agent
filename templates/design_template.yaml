# Nocturnal Agent 設計テンプレート v1.0
# このテンプレートを使って各エージェントが設計書を作成してください

project_info:
  name: ""  # プロジェクト名
  description: ""  # プロジェクトの概要
  version: "1.0.0"
  author: ""  # 設計者名
  created_at: ""  # 作成日時 (YYYY-MM-DD HH:MM:SS)
  workspace_path: ""  # 対象ワークスペースのパス

# 要件定義
requirements:
  # 機能要件
  functional:
    - description: ""  # 機能の説明
      priority: "HIGH"  # HIGH/MEDIUM/LOW
      acceptance_criteria:
        - ""  # 受け入れ基準1
        - ""  # 受け入れ基準2

  # 非機能要件
  non_functional:
    performance:
      response_time: "< 2秒"
      throughput: ""
      memory_usage: ""
    
    reliability:
      availability: "99.9%"
      error_rate: "< 0.1%"
      
    security:
      authentication: ""
      authorization: ""
      data_protection: ""
    
    maintainability:
      code_coverage: "> 80%"
      documentation: "必須"
      coding_standards: "PEP 8"

# アーキテクチャ設計
architecture:
  pattern: ""  # MVC, Layered, Microservices, etc.
  
  # システム構成
  components:
    - name: ""  # コンポーネント名
      type: ""  # Frontend/Backend/Database/API/etc.
      description: ""
      dependencies: []  # 依存するコンポーネント
      technologies: []  # 使用技術
  
  # データフロー
  data_flow:
    description: ""
    flow_diagram: ""  # テキストベースのフロー図
    
  # インターフェース
  interfaces:
    - name: ""  # インターフェース名
      type: "REST API"  # REST API/GraphQL/gRPC/etc.
      description: ""
      endpoints: []

# 技術スタック
technology_stack:
  backend:
    language: ""  # Python, Node.js, etc.
    framework: ""  # FastAPI, Express, etc.
    database: ""  # SQLite, PostgreSQL, etc.
    
  frontend:
    language: ""  # TypeScript, JavaScript, etc.
    framework: ""  # React, Vue, etc.
    
  devops:
    containerization: ""  # Docker, etc.
    ci_cd: ""  # GitHub Actions, etc.
    deployment: ""  # Cloud platform, etc.

# 実装計画
implementation_plan:
  # 開発フェーズ
  phases:
    - name: ""  # フェーズ名
      description: ""
      duration: ""  # 推定期間
      deliverables: []  # 成果物
      dependencies: []  # 依存関係
  
  # 優先度付きコンポーネント
  priority_components:
    - name: ""
      priority: "HIGH"  # HIGH/MEDIUM/LOW
      estimated_hours: 0  # 推定作業時間
      complexity: "MEDIUM"  # LOW/MEDIUM/HIGH/CRITICAL
      
  # リスク要因
  risks:
    - description: ""
      impact: "MEDIUM"  # LOW/MEDIUM/HIGH
      probability: "MEDIUM"  # LOW/MEDIUM/HIGH
      mitigation: ""  # 対策

# タスク分割
task_breakdown:
  # 自動生成されるタスクの設定
  task_generation:
    granularity: "MEDIUM"  # FINE/MEDIUM/COARSE
    max_hours_per_task: 4.0
    include_testing: true
    include_documentation: true
    
  # 明示的なタスク定義
  explicit_tasks:
    - title: ""
      description: ""
      priority: "MEDIUM"  # LOW/MEDIUM/HIGH/CRITICAL
      estimated_hours: 2.0
      phase: ""  # 所属フェーズ
      dependencies: []  # 依存タスク
      
      technical_requirements:
        - ""
        
      acceptance_criteria:
        - ""
        
      implementation_notes: ""

# 品質要件
quality_requirements:
  testing:
    unit_tests: true
    integration_tests: true
    e2e_tests: false
    coverage_target: 85
    
  code_quality:
    linting: true
    type_checking: true
    security_scanning: true
    
  documentation:
    api_docs: true
    user_docs: true
    developer_docs: true
    
  performance:
    load_testing: false
    stress_testing: false
    performance_monitoring: true

# 実行設定
execution_config:
  # 推奨実行モード
  recommended_mode: "nightly"  # immediate/nightly/scheduled
  
  # バッチサイズ（一度に実行するタスク数）
  batch_size: 5
  
  # 実行制約
  constraints:
    max_parallel_tasks: 1
    timeout_per_task: 3600  # 秒
    retry_on_failure: true
    max_retries: 2
    
  # 通知設定
  notifications:
    on_completion: true
    on_failure: true
    channels: ["log", "email"]  # log/email/slack

# メタデータ
metadata:
  template_version: "1.0.0"
  schema_url: "https://github.com/nocturnal-agent/schemas/design-template-v1.yaml"
  
  # 生成情報
  generated_by: ""  # エージェント名
  generation_timestamp: ""
  
  # 検証情報
  validated: false
  validation_errors: []
  
  # 推定メトリクス
  estimated_metrics:
    total_hours: 0
    total_tasks: 0
    complexity_score: 0.0
    risk_score: 0.0

# 使用方法のコメント
# 1. このテンプレートをコピーして具体的な値を記入
# 2. 必須フィールドを埋める（空文字列や0の項目）
# 3. 不要なセクションは削除可能
# 4. 完成したファイルでnaを起動: na --design-file your_design.yaml